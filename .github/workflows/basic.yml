# Based on https://github.com/actions-rs/example/blob/master/.github/workflows/quickstart.yml

on: [push, pull_request]

name: Basic

jobs:

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: 1.76.0
          target: wasm32-unknown-unknown
          override: true

      - name: Run unit tests
        uses: actions-rs/cargo@v1
        with:
          command: unit-test
          args: --locked
        env:
          RUST_BACKTRACE: 1

      - name: Compile WASM contract
        uses: actions-rs/cargo@v1
        with:
          command: wasm
          args: --locked
        env:
          RUSTFLAGS: "-C link-arg=-s"

  Lint:
    name: Lints
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: 1.76.0
          override: true
          components: clippy

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings
  Fmt:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: 1.76.0
          override: true
          components: rustfmt

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check
          
  schema:
    name: Schema Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Sources
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.6.0'

      - name: Generate Schema
        run: ./schema.sh
        working-directory: scripts

      - name: Show Schema Changes
        run: git status --porcelain

      - name: Check Schema Changes
        # fails if any changes not committed
        run: test -z "$(git status --porcelain)"