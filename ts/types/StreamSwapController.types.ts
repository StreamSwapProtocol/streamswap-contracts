/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.35.7.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

export type Decimal256 = string;
export type Uint128 = string;
export interface InstantiateMsg {
  accepted_in_denoms: string[];
  exit_fee_percent: Decimal256;
  fee_collector?: string | null;
  min_bootstrapping_duration: number;
  min_stream_duration: number;
  min_waiting_duration: number;
  protocol_admin?: string | null;
  stream_contract_code_id: number;
  stream_creation_fee: Coin;
  vesting_code_id: number;
}
export interface Coin {
  amount: Uint128;
  denom: string;
  [k: string]: unknown;
}
export type ExecuteMsg = {
  update_params: {
    accepted_in_denoms?: string[] | null;
    exit_fee_percent?: Decimal256 | null;
    fee_collector?: string | null;
    min_bootstrapping_duration?: number | null;
    min_stream_duration?: number | null;
    min_waiting_duration?: number | null;
    stream_creation_fee?: Coin | null;
  };
} | {
  create_stream: {
    msg: CreateStreamMsg;
  };
} | {
  freeze: {};
} | {
  unfreeze: {};
};
export type Timestamp = Uint64;
export type Uint64 = number;
export type PoolConfig = {
  concentrated_liquidity: {
    out_amount_clp: Uint256;
  };
};
export type Uint256 = string;
export type Binary = string;
export type Schedule = "saturating_linear" | {
  piecewise_linear: [number, Uint128][];
};
export interface CreateStreamMsg {
  bootstraping_start_time: Timestamp;
  end_time: Timestamp;
  in_denom: string;
  name: string;
  out_asset: Coin;
  pool_config?: PoolConfig | null;
  salt: Binary;
  start_time: Timestamp;
  stream_admin: string;
  threshold?: Uint256 | null;
  treasury: string;
  url?: string | null;
  vesting?: VestingConfig | null;
}
export interface VestingConfig {
  schedule: Schedule;
  unbonding_duration_seconds: number;
  vesting_duration_seconds: number;
}
export type QueryMsg = {
  params: {};
} | {
  freezestate: {};
} | {
  last_stream_id: {};
} | {
  list_streams: {
    limit?: number | null;
    start_after?: number | null;
  };
};
export type Boolean = boolean;
export interface StreamsResponse {
  streams: StreamResponse[];
}
export interface StreamResponse {
  address: string;
  id: number;
}
export type Addr = string;
export interface Params {
  accepted_in_denoms: string[];
  exit_fee_percent: Decimal256;
  fee_collector: Addr;
  min_bootstrapping_duration: number;
  min_stream_duration: number;
  min_waiting_duration: number;
  protocol_admin: Addr;
  stream_contract_code_id: number;
  stream_creation_fee: Coin;
  vesting_code_id: number;
}